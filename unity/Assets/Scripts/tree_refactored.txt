CGAL
Boost geometry

Scripts:
+---General
|   +---Menu
|   |       SceneLoader.cs				-> Handles loading next level
|   |
|   +---Game
|   |       IController.cs				-> Interface for default controller operations (initLevel, advanceLevel, checkVictory)
|   |       
|   +---Containers
|   |       MeshContainer.cs
|   |       ButtonContainer.cs
|   |       
|   +---Drawing
|   |       GraphDrawer.cs
|   |       LineDrawer.cs
|   |       ColorLine.cs
|   |       
|   +---Overlays
|   |       ControlsOverlay.cs
|   |       MeshOverlay.cs
|   |
|   \---Exceptions
|           TBD
|
+---ArtGallery
|   +---Model
|   |       ArtGallery_Solution.cs
|   |       ArtGallery_Map.cs
|   |       
|   +---UI
|   |       ArtGallery_LightHouse.cs
|   |       ArtGallery_VisionArea.cs
|   |       ArtGallery_Island.cs
|   |       
|   \---Controller
|           ArtGallery_Controller.cs
|
+---TheDivide
|   +---Model
|   |       Divide_GameState.cs
|   |       
|   +---UI
|   |       Divide_Soldier.cs
|   |       Divide_Line.cs
|   |       
|   \---Controller
|           Divide_Controller.cs
|
+---KingsTaxes 
|   +---Model
|   |       KingsTaxes_Solution.cs
|   |       
|   +---UI
|   |       KingsTaxes_ScoreTextField.cs
|   |       KingsTaxes_Road.cs
|   |       KingsTaxes_Settlement.cs
|   |
|   \---Controller
|           KingsTaxes_Controller.cs
|           KingsTaxes_TSPController.cs
|           KingsTaxes_MSTController.cs
|           KingsTaxes_SpannerController.cs
|   
+---Voronoi 
|   +---Model
|   |       Voronoi_GameState.cs
|   |
|   +---UI
|   |       Voronoi_Plane.cs
|   |
|   \---Controller
|           Voronoi_Controller.cs
|
\---Util
    +---Geometry
    |   +---Core
    |   |       (Point.cs)				-> use UnityEngine.Vector2
    |   |       Line.cs
    |   |       LineSegment.cs
    |   |
    |   +---Polygon
    |   |       IPolygon.cs
    |   |       SimplePolygon.cs
    |   |       PolygonWithHole.cs
    |   |
	|   +---Graph
    |   |       IGraph.cs				-> interface: add/delete Vertex/Edge, iterate neighbours, get degree, etc
	|   |       AdjacencyListGraph.cs	-> stores graph as adjacency lists
	|   |       GraphType.cs			-> directed/undirected
    |   |       Vertex.cs				-> stores point. use generic type <T> for other data storage (labels, etc)
    |   |       Edge.cs					-> stores connected vertices. use generic type <T> for other data storage (weights, etc)
	|   |
    |   +---DCEL
    |   |       DCEL_Vertex.cs			-> contains point and in/out half edges
    |   |       DCEL_HalfEdge.cs		-> one directional edge
    |   |       DCEL_Face.cs
    |   |       DCEL.cs					-> collection of vertices/edges/faces
    |   |
    |   +---Triangulation
    |   |       Triangle.cs
    |   |       Triangulation.cs
    |   |
    |   +---Duality
    |   |       Dual.cs
    |   |
    |   +---Algorithms
    |   |       SweepLine.cs			-> creating visibility region
	|   |       ShortestPath.cs			-> dijkstra / A*
	|   |       TSP.cs					-> greedy TSP implementation
	|   |       MST.cs					-> Prim 
	|   |       Matching.cs				-> (greedy) minimum weighted matching
    |   |       Delauney.cs				-> create Delauney triangulation
	|   |       Voronoi.cs				-> create Voronoi diagram (DCEL)
	|   |
	|   \---Exceptions
    |           GeomException.cs
    |          
    +---Math
    |       MathUtil.cs
    |
    \---DataStructures
        +---BST
        |       IBST.cs					-> use generic types <T>
        |       AATree.cs
        |       StatusTree.cs
        |
        +---Queue
        |       IPriorityQueue.cs		-> use generic types <T>
        |       BinaryHeap.cs
		|
		\---Exceptions
				DSException.cs